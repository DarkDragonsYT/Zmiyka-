// Змійка на C++
// Джерело: [1]

#include <iostream>
#include <conio.h>
#include <windows.h>
using namespace std;

// Розміри поля
const int width = 20;
const int height = 20;

// Координати голови змійки, яблука і змінна для напрямку руху
int x, y, fruitX, fruitY, score;
enum eDirection { STOP = 0, LEFT, RIGHT, UP, DOWN };
eDirection dir;

// Масив для зберігання координат хвоста змійки
int tailX[100], tailY[100];
int nTail; // Довжина хвоста

// Функція для налаштування початкових значень
void Setup()
{
    dir = STOP; // Змійка не рухається на початку
    x = width / 2; // Голова змійки в центрі поля
    y = height / 2;
    fruitX = rand() % width; // Яблуко випадково розташоване на полі
    fruitY = rand() % height;
    score = 0; // Початковий рахунок - нуль
}

// Функція для малювання поля і елементів гри
void Draw()
{
    system("cls"); // Очищення консолі
    for (int i = 0; i < width + 2; i++) // Малювання верхньої межі поля
        cout << "#";
    cout << endl;

    for (int i = 0; i < height; i++) // Малювання бокових меж і вмісту поля
    {
        for (int j = 0; j < width; j++)
        {
            if (j == 0)
                cout << "#"; // Ліва межа

            if (i == y && j == x)
                cout << "O"; // Голова змійки
            else if (i == fruitY && j == fruitX)
                cout << "F"; // Яблуко
            else
            {
                bool print = false;
                for (int k = 0; k < nTail; k++) // Малювання хвоста змійки
                {
                    if (tailX[k] == j && tailY[k] == i)
                    {
                        cout << "o";
                        print = true;
                    }
                }
                if (!print)
                    cout << " "; // Порожнє місце
            }

            if (j == width - 1)
                cout << "#"; // Права межа
        }
        cout << endl;
    }

    for (int i = 0; i < width + 2; i++) // Малювання нижньої межі поля
        cout << "#";
    cout << endl;
    cout << "Рахунок: " << score << endl; // Виведення рахунку
}

// Функція для обробки вводу користувача
void Input()
{
    if (_kbhit()) // Якщо користувач натиснув клавішу
    {
        switch (_getch()) // Отримання коду клавіші
        {
        case 'a': // Клавіша 'a' для руху вліво
            dir = LEFT;
            break;
        case 'd': // Клавіша 'd' для руху вправо
            dir = RIGHT;
            break;
        case 'w': // Клавіша 'w' для руху вгору
            dir = UP;
            break;
        case 's': // Клавіша 's' для руху вниз
            dir = DOWN;
            break;
        case 'x': // Клавіша 'x' для виходу з гри
            dir = STOP;
            break;
        }
    }
}

// Функція для оновлення логіки гри
void Logic()
{
    // Зберігання попередніх координат хвоста змійки
    int prevX = tailX[0];
    int prevY = tailY[0];
    int prev2X, prev2Y;
    tailX[0] = x;
    tailY[0] = y;
    for (int i = 1; i < nTail; i++) // Зсування хвоста змійки
    {
        prev2X = tailX[i];
        prev2Y = tailY[i];
        tailX[i] = prevX;
        tailY[i] = prevY;
        prevX = prev2X;
        prevY = prev2Y;
    }

    // Зміна координат голови змійки в залежності від напрямку руху
    switch (dir)
    {
    case LEFT:
        x--;
        break;
    case RIGHT:
        x++;
        break;
    case UP:
        y--;
        break;
    case DOWN:
        y++;
        break;
    default:
        break;
    }

    // Перевірка на зіткнення з межами поля
    if (x >= width) x = 0; else if (x < 0) x = width - 1;
    if (y >= height) y = 0; else if (y < 0) y = height - 1;

    // Перевірка на зіткнення з хвостом змійки
    for (int i = 0; i < nTail; i++)
        if (tailX[i] == x && tailY[i] == y)
            dir = STOP; // Гра закінчується

    // Перевірка на з'їдання яблука
    if (x == fruitX && y == fruitY)
    {
        score += 10; // Збільшення рахунку
        fruitX = rand() % width; // Генерація нового яблука
        fruitY = rand() % height;
        nTail++; // Збільшення довжини хвоста змійки
    }
}

// Головна функція програми
int main()
{
    Setup(); // Виклик функції налаштування
    while (dir != STOP) // Головний цикл гри
    {
        Draw(); // Виклик функції малювання
        Input(); // Виклик функції вводу
        Logic(); // Виклик функції логіки
        Sleep(10); // Затримка для регулювання швидкості гри
    }
    return 0;
}
